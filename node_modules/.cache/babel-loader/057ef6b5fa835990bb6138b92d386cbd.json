{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\diego\\\\AppPrograming\\\\Henrry\\\\app-Weather\\\\FT-29C-HOMEWORKH-HENRRY-main\\\\09-React-Routing\\\\homework\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { Route } from \"react-router-dom\";\nimport \"./App.css\";\nimport { About } from \"./components/About\";\nimport Cards from \"./components/Cards.jsx\";\nimport City from \"./components/City\";\nimport Footer from \"./components/Footer.jsx\";\nimport Nav from \"./components/Nav\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [cities, setCities] = useState([]);\n  const apiKey = \"4ae2636d8dfbdc3044bede63951a019b\";\n\n  function onSearch(city) {\n    fetch(`https://api.openweathermap.org/data/2.5/weather?q=${city}&appid=${apiKey}&units=metric`).then(response => response.json()).then(json => {\n      if (json.main !== undefined) {\n        const city = {\n          min: Math.round(json.main.temp_min),\n          max: Math.round(json.main.temp_max),\n          img: json.weather[0].icon,\n          id: json.id,\n          wind: json.wind.speed,\n          temp: json.main.temp,\n          name: json.name,\n          weather: json.weather[0].icon,\n          clouds: json.clouds.all,\n          latitud: json.coord.lat,\n          longitud: json.coord.lon\n        };\n        const deleteDuplicatedCities = cities.filter(element => element.name !== city.name);\n        setCities([...deleteDuplicatedCities, city]);\n        console.log(cities);\n      } else {\n        alert(\"Ciudad no encontrada\");\n      }\n    }).catch(e => console.log(e)); //Acá habría que hacer el llamado a la API para obtener los datos de la ciudad\n    //pero de momento agregaremos una ciudad por default para ver que funcione\n  }\n\n  function onFilterCityInformation(cityId) {\n    let city = cities.filter(c => c.id === parseInt(cityId));\n\n    if (city.length > 0) {\n      return city[0];\n    } else {\n      return null;\n    }\n  }\n\n  function onClose(id) {\n    setCities(oldCities => oldCities.filter(c => c.id !== id));\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(Route, {\n      path: \"/\",\n      render: () => /*#__PURE__*/_jsxDEV(Nav, {\n        onSearch: onSearch\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 37\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      exact: true,\n      path: \"\",\n      render: () => /*#__PURE__*/_jsxDEV(Cards, {\n        cities: cities,\n        onClose: onClose\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 23\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      path: \"/about\",\n      render: () => /*#__PURE__*/_jsxDEV(About, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 42\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      path: \"/:city/:id\",\n      render: _ref => {\n        let {\n          match\n        } = _ref;\n        return /*#__PURE__*/_jsxDEV(City, {\n          city: onFilterCityInformation(match.params.id)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      path: \"/\",\n      render: () => /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 37\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"f1nPJs+hrTaAy6BEqAnKgJLvJt4=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","Route","About","Cards","City","Footer","Nav","App","cities","setCities","apiKey","onSearch","city","fetch","then","response","json","main","undefined","min","Math","round","temp_min","max","temp_max","img","weather","icon","id","wind","speed","temp","name","clouds","all","latitud","coord","lat","longitud","lon","deleteDuplicatedCities","filter","element","console","log","alert","catch","e","onFilterCityInformation","cityId","c","parseInt","length","onClose","oldCities","match","params"],"sources":["C:/Users/diego/AppPrograming/Henrry/app-Weather/FT-29C-HOMEWORKH-HENRRY-main/09-React-Routing/homework/src/App.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport { Route } from \"react-router-dom\";\nimport \"./App.css\";\nimport { About } from \"./components/About\";\nimport Cards from \"./components/Cards.jsx\";\nimport City from \"./components/City\";\nimport Footer from \"./components/Footer.jsx\";\nimport Nav from \"./components/Nav\";\n\nfunction App() {\n  const [cities, setCities] = useState([]);\n  const apiKey = \"4ae2636d8dfbdc3044bede63951a019b\";\n  function onSearch(city) {\n    fetch(\n      `https://api.openweathermap.org/data/2.5/weather?q=${city}&appid=${apiKey}&units=metric`\n    )\n      .then((response) => response.json())\n      .then((json) => {\n        if (json.main !== undefined) {\n          const city = {\n            min: Math.round(json.main.temp_min),\n            max: Math.round(json.main.temp_max),\n            img: json.weather[0].icon,\n            id: json.id,\n            wind: json.wind.speed,\n            temp: json.main.temp,\n            name: json.name,\n            weather: json.weather[0].icon,\n            clouds: json.clouds.all,\n            latitud: json.coord.lat,\n            longitud: json.coord.lon,\n          };\n          const deleteDuplicatedCities = cities.filter(\n            (element) => element.name !== city.name\n          );\n          setCities([...deleteDuplicatedCities, city]);\n          console.log(cities);\n        } else {\n          alert(\"Ciudad no encontrada\");\n        }\n      })\n      .catch((e) => console.log(e));\n    //Acá habría que hacer el llamado a la API para obtener los datos de la ciudad\n    //pero de momento agregaremos una ciudad por default para ver que funcione\n  }\n  function onFilterCityInformation(cityId) {\n    let city = cities.filter((c) => c.id === parseInt(cityId));\n    if (city.length > 0) {\n      return city[0];\n    } else {\n      return null;\n    }\n  }\n\n  function onClose(id) {\n    setCities((oldCities) => oldCities.filter((c) => c.id !== id));\n  }\n  return (\n    <div className=\"App\">\n      <Route path=\"/\" render={() => <Nav onSearch={onSearch} />} />\n      <hr />\n      <Route\n        exact\n        path={\"\"}\n        render={() => <Cards cities={cities} onClose={onClose} />}\n      />\n      <Route path=\"/about\" render={() => <About />} />\n      <Route\n        path={\"/:city/:id\"}\n        render={({ match }) => (\n          <City city={onFilterCityInformation(match.params.id)} />\n        )}\n      />\n      <hr />\n      <Route path=\"/\" render={() => <Footer />} />\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}